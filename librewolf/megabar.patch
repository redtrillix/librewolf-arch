diff --git a/browser/components/urlbar/UrlbarInput.jsm b/browser/components/urlbar/UrlbarInput.jsm
index c557a10..3f8f1d4 100644
--- a/browser/components/urlbar/UrlbarInput.jsm
+++ b/browser/components/urlbar/UrlbarInput.jsm
@@ -1085,18 +1085,18 @@ class UrlbarInput {
     }
     this.removeAttribute("breakout-extend-disabled");
 
-    this._toolbar.setAttribute("urlbar-exceeds-toolbar-bounds", "true");
-    this.setAttribute("breakout-extend", "true");
+    // this._toolbar.setAttribute("urlbar-exceeds-toolbar-bounds", "true");
+    // this.setAttribute("breakout-extend", "true");
 
     // Enable the animation only after the first extend call to ensure it
     // doesn't run when opening a new window.
-    if (!this.hasAttribute("breakout-extend-animate")) {
-      this.window.promiseDocumentFlushed(() => {
-        this.window.requestAnimationFrame(() => {
-          this.setAttribute("breakout-extend-animate", "true");
-        });
-      });
-    }
+    // if (!this.hasAttribute("breakout-extend-animate")) {
+      // this.window.promiseDocumentFlushed(() => {
+        // this.window.requestAnimationFrame(() => {
+          // this.setAttribute("breakout-extend-animate", "true");
+        // });
+      // });
+    // }
   }
 
   endLayoutExtend() {
@@ -1186,8 +1186,13 @@ class UrlbarInput {
     let updateKey = {};
     this._layoutBreakoutUpdateKey = updateKey;
 
-    this.removeAttribute("breakout");
-    this.textbox.parentNode.removeAttribute("breakout");
+    if (this.hasAttribute("breakout")) {
+      this.removeAttribute("breakout");
+    }
+
+    if (this.textbox.parentNode.hasAttribute("breakout")) {
+      this.textbox.parentNode.removeAttribute("breakout");
+    }
 
     await this.window.promiseDocumentFlushed(() => {});
     await new Promise(resolve => {
@@ -1209,8 +1214,8 @@ class UrlbarInput {
           px(getBoundsWithoutFlushing(this._toolbar).height)
         );
 
-        this.setAttribute("breakout", "true");
-        this.textbox.parentNode.setAttribute("breakout", "true");
+        // this.setAttribute("breakout", "true");
+        // this.textbox.parentNode.setAttribute("breakout", "true");
 
         resolve();
       });
